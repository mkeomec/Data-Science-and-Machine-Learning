plot(data_assigned$age,data_assigned$revenue)
plot(log(data_assigned$age),log(data_assigned$revenue))
plot(data_assigned$age,data_assigned$revenue,ylim=c(1,300000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(1,3000000000))
plot(data_assigned$age,data_assigned$revenue,)
plot(data_assigned$age,data_assigned$revenue)
plot(data_assigned$age,data_assigned$revenue,ylim=c(1,3000000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(10,3000000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(1000,3000000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(10000000,3000000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(1000000000,3000000000))
plot(data_assigned$age,data_assigned$revenue,ylim=c(10000000,3000000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(1,600000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(1,600000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(1,600000000))
?cut
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(1,600000000))
split(data_unassigned, cut(data_unassigned$age,100))
test <- split(data_unassigned, cut(data_unassigned$age,100))
test
test <- (data_unassigned, cut(data_unassigned$age,100))
test <- (cut(data_unassigned$age,100))
test
plot(test)
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,100))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,10))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,10))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,100))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,10))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,100000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,1000000))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,10000000))
plot(data_assigned$age,data_assigned$revenue)
View(dataset)
dataset$revenue[dataset$revenue=="NA",]=0
dataset$revenue[,dataset$revenue=="NA"]=0
dataset$revenue[,dataset$revenue=="NA"] <- 0
dataset$revenue[,dataset$revenue=="NA"]
dataset$revenue=="NA"
is.na(dataset$revenue)
dataset$revenue[,is.na(dataset$revenue)]=0
dataset$revenue[,is.na(dataset$revenue)]
dataset$revenue[is.na(dataset$revenue),]
dataset[is.na(dataset$revenue),]
dataset$revenue[,is.na(dataset$revenue)]
dataset$revenue[is.na(dataset$revenue)]
[is.na(dataset$revenue)]
is.na(dataset$revenue)
!is.na(dataset$revenue)
dataset$revenue[!is.na(dataset$revenue)]
dataset$revenue[is.na(dataset$revenue)]=0
is.na(dataset$revenue)
View(dataset)
avg_revenue <- as.numeric(aggregate(revenue~assigned,dataset,FUN=mean)[2][,1])
names(avg_revenue) <- c("Unassigned","Assigned")
barplot(avg_revenue,main="Average Revenue by assignment", xlab="Assignment", ylab="$ dollars")
data_assigned <- dataset[dataset$assigned==1,]
data_unassigned <- dataset[dataset$assigned==0,]
plot(data_unassigned$age,data_unassigned$revenue)
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,100))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,10000000))
plot(data_assigned$age,data_assigned$revenue)
plot(data_assigned$age,data_assigned$revenue,ylim=c(10000000,3000000000))
lm(log(data_assigned$age)~log(data_assigned$revenue))
lm(log(data_assigned$age)~log(data_assigned$revenue+1))
lm(log(data_assigned$age)~log(data_assigned$revenue+10))
plot(log(data_assigned$age)~log(data_assigned$revenue))
plot(log(data_assigned$age),log(data_assigned$revenue))
plot(log(data_assigned$age),(data_assigned$revenue))
plot(data_assigned$age,data_assigned$revenue)
plot(log(data_assigned$age),(data_assigned$revenue))
sort(data_assigned$age)
data_assignedtest <- sort(data_assigned$age)
data_assignedtest <- data_assigned[order(age)]
data_assignedtest <- data_assigned[order(data_assigned$age)]
data_assignedtest <- data_assigned[order(data_assigned$age),]
View(data_assignedtest)
data_assigned <- data_assigned[order(data_assigned$age),]
data_unassigned <- data_unassigned[order(data_unassigned$age),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
View(data_assigned)
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
plot(data_unassigned$age,data_unassigned$rev_cumsum)
plot(data_unassigned$age,data_unassigned$revenue)
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,100))
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$rev_cumsum)
plot(data_assigned$age,data_assigned$revenue)
plot(data_assigned$age,data_assigned$rev_cumsum)
dataset <- dataset[order(dataset$age)]
dataset <- dataset[order(dataset$age),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$age,dataset$rev_cumsum)
plot(data_assigned$age,data_assigned$rev_cumsum)
plot(dataset$age,dataset$rev_cumsum)
plot(data_unassigned$age,data_unassigned$rev_cumsum)
lm(dataset$revenue~dataset$assigned)
rev_mod <- lm(dataset$revenue~dataset$assigned)
summary(rev_mod)
avg_revenue <- as.numeric(aggregate(revenue~assigned,dataset,FUN=mean)[2][,1])
names(avg_revenue) <- c("Unassigned","Assigned")
barplot(avg_revenue,main="Average Revenue by assignment", xlab="Assignment", ylab="$ dollars")
plot(dataset$first_revenue_date,dataset$rev_cumsum)
dataset <- dataset[order(dataset$first_revenue_date),]
plot(dataset$first_revenue_date,dataset$rev_cumsum)
plot(dataset$first_revenue_date,dataset$revenue)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
View(dataset)
dataset <- dataset[order(dataset$first_revenue_date),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
plot(data_unassigned$age,data_unassigned$rev_cumsum)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
data_unassigned <- data_unassigned[order(data_unassigned$first_revenue_date),]
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
data_unassigned <- data_unassigned[order(data_unassigned$first_revenue_date),]
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
data_assigned <- data_assigned[order(data_assigned$first_revenue_date),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
plot(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
plot(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
plot(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
View(data_assigned)
plot(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
lines(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
plot(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
lines(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
dataset <- dataset[order(dataset$first_revenue_date),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
lines(dataset$first_revenue_date,dataset$rev_cumsum)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
lines(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
lines(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
View(data_assigned)
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=c(2017-01-01,2017-06-31,))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=c(2017-01-01,2017-06-31))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=c(2016-01-01,2017-06-31))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=c(2006-01-01,2017-06-31))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=c('2006-01-01','2017-06-31'))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=as.Date(c('2006-01-01','2017-06-31')))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=as.Date(c("2006-01-01","2017-06-31")))
as.Date(c("2006-01-01","2017-06-31"))
as.Date(c("2006-01-01","2017-06-06"))
as.Date(c("2006-01-01","2017-06-30"))
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=as.Date(c("2006-01-01","2017-06-30")))
plot(dataset$first_revenue_date,dataset$rev_cumsum)
plot(dataset$first_revenue_date,dataset$rev_cumsum, xlim=as.Date(c("2013-01-01","2017-06-30")))
dataset <- dataset[order(dataset$first_revenue_date),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$first_revenue_date,dataset$revenue)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
plot(dataset$first_revenue_date,dataset$rev_cumsum,xlim=as.Date(c("2013-01-01","2017-06-30")))
plot(dataset$first_revenue_date,dataset$rev_cumsum)
lines(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum)
lines(data_assigned$first_revenue_date,data_assigned$rev_cumsum)
lines(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum, col='red')
lines(data_assigned$first_revenue_date,data_assigned$rev_cumsum, col='blue')
dataset <- read.csv("C:/Users/ML/Dropbox/Work/Job Search/Potential Employers/Indeed/homework_data_set.csv")
nleads <- nrow(dataset)
table(dataset$assigned)
dataset$revenue[is.na(dataset$revenue)]=0
avg_revenue <- as.numeric(aggregate(revenue~assigned,dataset,FUN=mean)[2][,1])
names(avg_revenue) <- c("Unassigned","Assigned")
barplot(avg_revenue,main="Average Revenue by assignment", xlab="Assignment", ylab="$ dollars")
data_assigned <- dataset[dataset$assigned==1,]
data_unassigned <- dataset[dataset$assigned==0,]
data_assigned <- data_assigned[order(data_assigned$age),]
data_unassigned <- data_unassigned[order(data_unassigned$age),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
dataset <- dataset[order(dataset$age),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$age,dataset$rev_cumsum)
plot(data_unassigned$age,data_unassigned$revenue)
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$rev_cumsum)
plot(data_assigned$age,data_assigned$revenue)
plot(data_assigned$age,data_assigned$revenue,ylim=c(10000000,3000000000))
plot(data_assigned$age,data_assigned$rev_cumsum)
rev_mod <- lm(dataset$revenue~dataset$assigned)
summary(rev_mod)
dataset <- dataset[order(dataset$first_revenue_date),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$first_revenue_date,dataset$revenue)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
all_mod <- lm(dataset$revenue~dataset$advertiser_id+dataset$assigned+dataset$date_assignment_starts+dataset$date_assignment_ends+dataset$first_revenue_date+dataset$date_created+dataset$age+dataset$assign_days)
summary(all_mod)
dataset <- read.csv("C:/Users/ML/Dropbox/Work/Job Search/Potential Employers/Indeed/homework_data_set.csv")
all_mod <- lm(dataset$revenue~dataset$advertiser_id+dataset$assigned+dataset$date_assignment_starts+dataset$date_assignment_ends+dataset$first_revenue_date+dataset$date_created+dataset$age+dataset$assign_days)
summary(all_mod)
summary(all_mod)
as.date(dataset$date_assignment_starts)[1]
as.Date(dataset$date_assignment_starts)[1]
as.Date(dataset$date_assignment_starts)[1:2]
as.integer(dataset$date_assignment_starts)[1:2]
as.integer(dataset$date_assignment_starts)[1:10]
as.integer(dataset$date_created)[1:10]
View(dataset)
all_mod <- lm(dataset$revenue~dataset$advertiser_id+dataset$assigned+as.integer(dataset$date_assignment_starts)+as.integer(dataset$date_assignment_ends)+as.integer(dataset$first_revenue_date)+as.integer(dataset$date_created)+dataset$age+dataset$assign_days)
summary(all_mod)
max(as.integer(dataset$date_created))
mean(as.integer(dataset$date_created))
min(as.integer(dataset$date_created))
table(dataset$assigned)
avg_revenue <- as.numeric(aggregate(revenue~assigned,dataset,FUN=mean)[2][,1])
names(avg_revenue) <- c("Unassigned","Assigned")
barplot(avg_revenue,main="Average Revenue by assignment", xlab="Assignment", ylab="$ dollars")
data_assigned <- dataset[dataset$assigned==1,]
data_unassigned <- dataset[dataset$assigned==0,]
data_assigned <- data_assigned[order(data_assigned$age),]
data_unassigned <- data_unassigned[order(data_unassigned$age),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
dataset <- dataset[order(dataset$age),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$age,dataset$rev_cumsum)
plot(dataset$age,dataset$rev_cumsum)
data_assigned <- data_assigned[order(data_assigned$age),]
data_unassigned <- data_unassigned[order(data_unassigned$age),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
dataset <- dataset[order(dataset$age),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$age,dataset$rev_cumsum)
plot(dataset$age,dataset$rev_cumsum)
#Import dataset
dataset <- read.csv("C:/Users/ML/Dropbox/Work/Job Search/Potential Employers/Indeed/homework_data_set.csv")
#Number of leads is equal to number of rows in dataset
nleads <- nrow(dataset)
#Count number of leads in assigned and unassigned populations
table(dataset$assigned)
#Convert "NA" value in revenue to zero for upcoming analyses
dataset$revenue[is.na(dataset$revenue)]=0
#Avg of revenue by assigned group
avg_revenue <- as.numeric(aggregate(revenue~assigned,dataset,FUN=mean)[2][,1])
names(avg_revenue) <- c("Unassigned","Assigned")
barplot(avg_revenue,main="Average Revenue by assignment", xlab="Assignment", ylab="$ dollars")
#Subset by assignment
data_assigned <- dataset[dataset$assigned==1,]
data_unassigned <- dataset[dataset$assigned==0,]
data_assigned <- data_assigned[order(data_assigned$age),]
data_unassigned <- data_unassigned[order(data_unassigned$age),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
dataset <- dataset[order(dataset$age),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
plot(dataset$age,dataset$rev_cumsum)
plot(data_unassigned$age,data_unassigned$revenue)
plot(data_unassigned$age,data_unassigned$revenue,ylim=c(0,600000000),xlim=c(0,1500))
plot(data_unassigned$age,data_unassigned$rev_cumsum)
plot(data_assigned$age,data_assigned$rev_cumsum)
dataset <- dataset[order(dataset$first_revenue_date),]
dataset$rev_cumsum <- cumsum(dataset$revenue)
data_unassigned <- data_unassigned[order(data_unassigned$first_revenue_date),]
data_unassigned$rev_cumsum <- cumsum(data_unassigned$revenue)
data_assigned <- data_assigned[order(data_assigned$first_revenue_date),]
data_assigned$rev_cumsum <- cumsum(data_assigned$revenue)
plot(dataset$first_revenue_date,dataset$rev_cumsum)
lines(data_unassigned$first_revenue_date,data_unassigned$rev_cumsum, col='red')
lines(data_assigned$first_revenue_date,data_assigned$rev_cumsum, col='blue')
Sys.Date()
today <- Sys.Date()
class(today)
today <- Sys.Date()
class(today)
c <- "1900-01-01"
class(c)
my.date <- as.Date(c)
class(my.date)
my.date <- as.Date("Nov-03-90",format="%b-%d-%y")
as.Date("June,01,2002",format="%B,%d,%Y")
as.POSIXct("11:02:03",format="%H:%M:%S")
?strptime
install.packages(dplyr)
install.packages('dplyr)
install.packages('dplyr')
head(mtcars)
slice(mtcars,mpg>20,cyl==6)
library(dplyr)
slice(mtcars,mpg>20,cyl==6)
slice(mtcars,mpg>20&cyl==6)
mtcars
slice(mtcars,mpg>10&cyl==6)
slice(mtcars,mpg>10&cyl==4)
a <- slice(mtcars,mpg>10 & cyl==4)
filter(mtcars,mpg>10 & cyl==4)
filter(mtcars,mpg>20 & cyl==6)
arrange(mtcars,cyl,wt)
arrange(mtcars,cyl,desc(wt)
arrange(mtcars,cyl,desc(wt))
)
arrange(mtcars,cyl,desc(wt))
select(mtcars,mpg,hp)
distinct(mtcars,gears)
distinct(mtcars,gear)
select(distinct(mtcars,gear),gear)
mutate(mtcars,Performance=hp/wt)
summarise(mtcars,avg_mpg=mean(mpg,na.rm=TRUE))
mtcars%>%filter(mtcars,cyl=6) %>% mean(hp)
mtcars%>%filter(cyl=6) %>% mean(hp)
results <- mtcars
results%>%filter(cyl=6) %>% mean(hp)
df <- results%>%filter(cyl=6) %>% mean(hp)
df <- results %>% filter(cyl=6) %>% mean(hp)
df <- results %>% filter(cyl==6) %>% mean(hp)
df <- results %>% filter(cyl==6) %>% mean(hp,na.rm=TRUE)
mean(result$hp,na.rm=TRUE)
mean(mtcars$hp,na.rm=TRUE)
df <- mtcars
result <- df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
results <- mtcars
df <- results %>% filter(cyl==6) %>% mean(hp,na.rm=TRUE)
df <- results %>% filter(cyl==6)
View(df)
df <- results %>% filter(cyl==6) %>% mean(hp)
df <- results %>% filter(cyl==6) %>% arrange(hp)
View(df)
class(result)
class(result$hp)
mean(result$hp)
mean(df$hp)
df <- results %>% filter(cyl==6) %>% summarise(mean_hp=mean(hp,na.rm=TRUE)
df <- results %>% filter(cyl==6) %>% arrange(hp)
df <- results %>% filter(cyl==6) %>% summarise(mean_hp=mean(hp,na.rm=TRUE))
View(df)
filter(mtcars,mpg>20, cyl==6)
mtcars %>% distinct(gear)%>% select(gear)
mtcars %>% distinct(gear)
install.packages('tidyr')
library(tidyr)
install.packages('data.table')
library(data.table)
library(tidyr)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9,min=0, max=100)
q2 <- runif(9,min=0, max=100)
q3 <- runif(9,min=0, max=100)
q4 <- runif(9,min=0, max=100)
runif(10)
?runif
plot(runif(100))
plot(runif(1000))
plot(punif(1000))
punif(10)
punif(10,min=0,max=1)
punif(c(1,2,3),min=0,max=1)
dunif(c(1,2,3),min=0,max=1)
df
df <- data.frame(comp=comp,year=yr,Qtr1=q1,Qtr2=q2,Qtr3=q3,Qtr4=q4)
df
gather(df,Quarter,Revenue,Qtr1:Qtr4)
gather(df,Quarter,Revenue,Qtr1:Qtr3)
?tidyr
df %>% gather(Quarter, Revenue,Qtr1:Qtr4)
stocks <- data.frame(
time=as.Date('2009-01-01')+0:9,
X=rnorm(10,0,1),
Y=rnorm(10,0,2),
Z=rnorm(10,0,4)
)
stocks
rnorm(10)
plot(rnorm(100)
)
plot(rnorm(1000)
)
plot(rnorm(1000,0,1)
)
plot(norm(1000,0,1))
?rnorm
plot(dnorm(1000,0,1))
plot(dnorm(1000,mean=1,sd=1))
x<-rnorm(100000,mean=10, sd=2)
hist(x,breaks=150,xlim=c(0,20),freq=FALSE)
abline(v=10, lwd=5)
abline(v=c(4,6,8,12,14,16), lwd=3,lty=3)
time
stocks$time
1+1:10
stocks.gathered <- stocks %>% gather(stock,price,X,Y,Z)
stocks.gathered
stocks.gathered %>% spread(stock,price,X,Y,Z)
stocks.gathered %>% spread(stock,price)
stocks.gathered %>% spread(stock,time)
stocks.gathered %>% spread(stock,time,price)
stocks.gathered %>% spread(time,price)
df <- data.frame(new.col=c(NA,"a.x","b.y","c.z"))
df
seperate(df,new.col,c('ABC','XYZ'))
separate(df,new.col,c('ABC','XYZ'))
df <- data.frame(new.col=c(NA,"a-x","b-y","c-z"))
separate(data=df,col=new.col,into=c('abc','xyz'),sep='-')
df.sep <- separate(data=df,col=new.col,into=c('abc','xyz'),sep='-')
unite(df.sep,new.joined.col,abc,xyz)
unite(df.sep,new.joined.col,abc,xyz,sep=.)
unite(df.sep,new.joined.col,abc,xyz,sep='.')
unite(df.sep,new.joined.col,abc,xyz,sep='...')
read.csv('C:/Users/ML/Dropbox/Work/Data-learn/R-for-Data-Science-and-Machine-Learning/Machine Learning with R')
read.csv('C:/Users/ML/Dropbox/Work/Data-learn/R-for-Data-Science-and-Machine-Learning/Machine Learning with R/student-mat.csv')
df <- read.csv('C:/Users/ML/Dropbox/Work/Data-learn/R-for-Data-Science-and-Machine-Learning/Machine Learning with R/student-mat.csv')
View(df)
head(df)
df <- read.csv('C:/Users/ML/Dropbox/Work/Data-learn/R-for-Data-Science-and-Machine-Learning/Machine Learning with R/student-mat.csv',sep=';')
head(df)
summary(df)
any(is.na(df))
str(df)
library(ggplot2)
library(ggthemes)
library(dplyer)
install.packages('ggthemes')
library(ggplot2)
library(ggthemes)
library(dplyr)
num.cols <- sapply(df,is.numeric)
?sapply
cor.data <- cor(df[,num.cols])
print(cor.data)
num.cols
is.numeric(df)
is.numeric(df$school)
is.numeric(df$age)
is.factor(df$school)
is.factor(df$age)
install.packages('corrgram')
install.packages('corrplot')
library(corrgram)
library(corrplot)
print(corrplot(cor.data))
print(corrplot(cor.data,method='color'))
corrgram(df)
?corrgram
corrgram(df,order=TRUE,lower.panel=panel.shade,upper.panel=panel.pie, test.panel=panel.txt)
ggplot(df,aes(x=G3))
ggplot(df,aes(x=G3))+geom_histogram(bins=20,alpha=0.5,fill='blue'
ggplot(df,aes(x=G3))+geom_histogram(bins=20,alpha=0.5,fill='blue')
ggplot(df,aes(x=G3))+geom_histogram(bins=20,alpha=0.5,fill='blue'))
ggplot(df,aes(x=G3)+geom_histogram(bins=20,alpha=0.5,fill='blue'))
ggplot(df,aes(x=G3))+geom_histogram(bins=20,alpha=0.5,fill='blue')
install.packages('caTools')
install.packages("caTools")
library(caTools)
sample <- sample.split(df$G3)
sample
sample <- sample.split(df$G3,SplitRatio=0.7)
sample
train <- subset(df,sample)
train <- subset(df,sample==TRUE)
test <- subset(df,sample==FALSE)
View(test)
model <- lm(g3~.,train)
model <- lm(G3~.,train)
summary(model)
set.seed(101)
sample <- sample.split(df$G3,SplitRatio=0.7)
train <- subset(df,sample==TRUE)
test <- subset(df,sample==FALSE)
model <- lm(G3~.,train)
summary(model)
res <- residuals(model)
class(res)
res
res <- as.data.frame(res)
head(res)
ggplot(res,aes(res))+geom_histogram(fill='blue',alpha=0.5)
library(ggplot2)
ggplot(res,aes(res))+geom_histogram(fill='blue',alpha=0.5)
plot(model)
G3.predictions <- predict(model,test)
results <- cbind(G3.predictions,test$G3)
colnames(results) <- c('predicted','actual')
results <- as.data.frame(results)
results
to_zero <- function(x){
if (x<0){
return(0)
}else{
return(x)
}
}
results$predicted <- sapply(results$predicted,to_zero)
mse <- mean((results$actual-results$predicted)^2)
mse
mse^0.5
SSE <- sum((results$predicted-results$actual)^2)
SSE <- sum((results$predicted-results$actual)^2)
SST <- sum((mean(df$G3)-results$actual)^2)
R2 <- 1-SSE/SST
R2
getwd()
setwd("~/Data-Science-and-Machine-Learning-Bootcamp")
getwd()
setwd("C:/Users/ML/Documents/Data-Science-and-Machine-Learning-Bootcamp")
train <- read.csv('train.csv')
test <- read.csv('test.csv')
train <- read.csv('train.csv')
test <- read.csv('test.csv')
View(train)
View(test)
head(train)
